---
layout: post
title: "[C언어] #0. 프로그래밍"
subtitle: "컴퓨터와 대화"
categories: study
tags: c
---

### 프로그래밍이란?

----

프로그래밍(Programming)이란 **''프로그램을 만드는 행위''**라고 간단히 말할 수 있다.



그렇다면 프로그램(Program)은 무엇일까?

프로그램은 **순서에 따라 한 번에 하나씩 실행되는 명령어로 구성되어 있는 수행절차**를 나타낸다.

쉽게 말하면, 우리가 라면을 끓일 때 라면 끓이는 순서(레시피)도 프로그램의 일종이라고 할 수 있다. 

1. 냄비와 라면을 준비한다.
2. 냄비에 물을 담는다.
3. 물이 담긴 냄비를 가스레인지에 올려 놓는다.
4. 가스레인지를 켠다.
5. 물이 끓을 때까지 기다린다.
6. 물이 끓으면 라면과 스프를 넣는다.

 위에서 보여지는 라면 끓이는 방법은 라면을 끓일 수 있도록 순서대로 하나씩 실행되는 명령어로 구성되어 있기 때문에  라면 프로그램이라고도 말할 수 있다.



그렇다면 컴퓨터 프로그램은 무엇일까?

컴퓨터 프로그램은 컴퓨터로 하여금 어떠한 기능을 수행할 수 있도록 지시하는 명령어들의 집합 또는 프로그램의 집합이다.

예를 들어 컴퓨터 게임은 여러 사람이 대화할 수 있는 채팅기능, 몬스터를 때리는 공격기능 등 다양한 기능을 가지고 있다.  

각 기능들이 잘 동작할 수 있도록 명령을 내리는 것이 프로그램이다.



### 컴퓨터와의 대화

---

프로그래밍이라는 단어를 들었을 때 어렵고 난해하다고 대부분의 사람들이 느낀다.

나 또한 그랬고 내가 가르쳤던 초, 중, 고등학교 학생들도 그러했다.

잠깐 코딩학원에서 강사로 생활하며, 어린 친구들에게 어떻게 코딩, 즉 프로그래밍이라는 것을 설명할까 많은 고민을 하다가 처음 코딩을 접하는 친구들에게 항상 해주는 말이 있었다.

> 프로그래밍(코딩)은 컴퓨터와의 대화다.

한국어를 모르는 영국사람을 만났을 때,  학국어로 말을 하면 못 알아듣듯이 컴퓨터도 사람의 언어로 말하면 알아 듣지 못한다.

영국사람과 대화하기 위해선 영어를 알아야 하듯이,

**컴퓨터와 대화하기(명령을 내리기) 위해 만들어진 언어**가 프로그래밍(컴퓨터) 언어다.



### 기계어 (Machine Language)

---

컴퓨터는 전기 신호가 있고, 없고에 따라서 정보를 2진수 체계로 인식한다.

위에서 언급했듯이 사람에도 언어가 있듯이 컴퓨터에도 컴퓨터 언어가 존재한다.

그 중 컴퓨터가 직접 읽을 수 있는 2진 숫자 0과 1로 이루어진 언어를 **기계어**라고 한다.

(컴퓨터의 CPU가 명령을 처리할 때 사용하는 언어이며 아래와 같이 2진수로 이루어져 있다. )

![machineLaguage](https://github.com/supremest35/supremest35.github.io/blob/main/assets/img/machineLaguage.png?raw=true)

기계어도 프로그래밍 언어이기 때문에 기계어에 익숙해지면 위와 같이 기계어를 나열하여 프로그래밍을 할 수 있다. 하지만 위와 같은 형식의 코드를 이해하거나 수정하는 작업은 컴퓨터가 아닌 사람들에게는 굉장히 어려울 것이다.

결국, 기계어는 컴퓨터가 이해하기 쉬우나 사람이 컴퓨터에게 명령을 내리기는(프로그래밍) 힘들기 때문에 기계어를 사용해서 프로그램을 한다는 것은 좋은 선택이 아니다.



### 어셈블리어 (Assembly Language)

----

0과 1의 숫자로만 이루어진 기계어를 사람들이 쉽게 사용하기 위해 만들어진 언어가 **어셈블리어**다.

어셈블리어는 기계어와 1:1로 대응된 명령을 기술하는 언어다. 그 코드가 어떤 일을 할지를 기계어처럼 추상적이 아닌, 직접적으로 보여준다.

예를 들어, "더하기"라는 명령을 내리려고 한다면, 기계어는 이진수로 이루어진(0110과 같은) 명령을 전달해야 하는데, 사람은 이를 이해하기 어렵다. 그래서 0110과 1대1 대응되는 "add"와 같은 명령어를 제공하는 것이다.

명령어로 이루어져 있기 때문에 기계어보다는 사용하기 쉬우나 이를 제대로 사용하려면 프로세서의 작동방식을 정확히 이해하고 있어야한다. 기계어와 가장 유사하며 기계어로 번역하기 위해서는 어셈블러(Assembler)가 필요하다. 프로세서마다 작동방식이 다르기 때문에 새로운 프로세서가 나올때 마다, 별도의 학습이 필요하다는 단점이 있다.

 

### 고급 프로그래밍 언어(High-level Language)

---

프로그래밍 언어는 크게 저급 언어(low-level language)와 고급 언어(high-level language)로 나뉜다.

저급 언어와 고급 언어는 좋고 나쁜 언어가 아니라, 상대적으로 기계어가 이해하기 쉬운 언어(저급 언어)인지, 사람이 이해하기 쉬운 언어(고급언어) 인지에 따라 나눈 개념이다.

따라서, 위에서 언급한 기계어와 어셈블리어는 저급 언어에 속한다.

프로그래머들은 사람이 조금 더 쉽게 이해할 수 있는 프로그래밍 언어(고급언어)를 개발하기 시작했다.

대표적인 언어들로 C언어, C++, C#, Java, Python 등이 있다.

이 프로그램들은 저급언어보다 가독성이 높고 다루기 간단하다는 장점을 가지고 있다. 다만, 컴퓨터가 실행하기 위해서는 기계어로 번역되어 실행되어야하며 이를 변경하는 프로그램을 컴파일러(Complier)라고 한다. 

C언어는 사람이 이해하기 편한 문법구조로 되어 있기도 하지만 기계어의 명령 구조와 유사한 문법들도 가지고 있어서 '중급언어(middle-level language)'라고 부르기도 한다.

